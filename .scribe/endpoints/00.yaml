name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: sanctum/csrf-cookie
    metadata:
      title: 'Return an empty response simply to trigger the storage of the CSRF cookie in the browser.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 204
        content: ''
        headers:
          cache-control: 'no-cache, private'
          access-control-allow-origin: '*'
          set-cookie: 'XSRF-TOKEN=eyJpdiI6InVIeDR0eFd6bDJEejl5Z2hHenpoSnc9PSIsInZhbHVlIjoiRFpKaHlSUU0zTm1TL2p2cVFZK2dXOVNLSFhqNFUrZ1F5d1VkNmdSU255d1hZY1dkN1R3b1VyOWhXaHkycWRmZmxnU25wQ0NTMTRxWXg3c1dGWldKN1dlaWVmeEFzRkdleTg4NVBqbk9WVTRaMEZUcksrZlRYQ1owUFFDSlArUWciLCJtYWMiOiI2YzhmZTczOGYyOTk5MzdkMGJhNmJjZjRkOTM0OWZlNTA1ODA4ZWExNjE5YmEwYmYxN2FiNTUyMjBjNjAzMTM3IiwidGFnIjoiIn0%3D; expires=Sun, 07-Nov-2021 11:13:42 GMT; Max-Age=7200; path=/; samesite=lax; sayne_api_session=eyJpdiI6InNXdlRsUkZBUW1qcDBXUDAyQzF3WVE9PSIsInZhbHVlIjoiZG01SFZMc1ZqRUNFdGp0V0V6d0FLcEZTWTJvOTNpVkl2YkNEZDdYSzdRQW9JVGt4RGcyNlRVL3dZcll4WUZLUys4UXJwU3pwM2tIdWJMTmJNTThpSFNRUDF0QzJOME1SYWRpZis2YkZ4TnNxZk93VDd4Z0xOOTBVd04vaFczcDQiLCJtYWMiOiIxOTRkYTNiMGQyOTdmYTczMjBkZTMxNWY4NTc4Y2YyMTgxY2M1NGQxZDI5NjliODQyMzYzMTQxZmM1ODRiOWFhIiwidGFnIjoiIn0%3D; expires=Sun, 07-Nov-2021 11:13:42 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: /
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 404
        content: '{"title":"error 404: page not found.","message":"Undefined index: HTTP_HOST"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: register
    metadata:
      title: 'Create a new User'
      description: 'This endpoint  lets you create a user'
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: 'Le texte de value ne peut contenir plus de 255 caractères.'
        required: true
        example: uecfpqirdoksnrcpvdudrqovkrvplqycvajvzboqzsifmimtypdhuojfudqgjqlhjwzvmxibgmwhmttbaddcjdjnikkvkkhofrxeybuoxv
        type: string
      lastname:
        name: lastname
        description: 'Le texte de value ne peut contenir plus de 255 caractères.'
        required: true
        example: sisjulw
        type: string
      date_naissance:
        name: date_naissance
        description: 'Le texte de value ne peut contenir plus de 255 caractères.'
        required: true
        example: yrpjftxrxhdlivvncvurefewwcoyyizcaguioqdvfrk
        type: string
      sexe:
        name: sexe
        description: 'Le texte de value ne peut contenir plus de 255 caractères.'
        required: true
        example: wwgmkztfybqkbasadpoysuxctklasegxkwwgqxqpyggyzjjslwrgiygeertyogfzmujgrauwpdkwqzvmembb
        type: string
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide. Le texte de value ne peut contenir plus de 255 caractères.'
        required: true
        example: jrxgfkzzgaekuypilunmmmewbizrlgljlluaxmtbygqmebznufuailljqdyvsgtxzffutspakapslzexufarkqzgidczraccsolwoarcfseofedbzuz
        type: string
      password:
        name: password
        description: 'Le texte value doit contenir au moins 4 caractères.'
        required: true
        example: qcn
        type: string
      confirm_password:
        name: confirm_password
        description: 'Les champs value et <code>password</code> doivent être identiques.'
        required: true
        example: consequatur
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: login
    metadata:
      title: 'Log in a user'
      description: 'This endpoint lets you log in a user with email and password'
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user. exemple@mail.com'
        required: true
        example: vel
        type: string
      password:
        name: password
        description: 'The password of the user. And must be 6 characters in min.'
        required: true
        example: nihil
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'user/{token}'
    metadata:
      title: 'Get User information'
      description: 'This endpoint lets to get the authenticated user information'
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: neque
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"error":true,"message":"Votre token n''ai pas valide, veuillez le r\u00e9initialiser."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'users/{token}'
    metadata:
      title: 'Users list'
      description: 'This endpoint lets you getting all register Users.'
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: reprehenderit
        type: string
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"error":true,"message":"Votre token n''ai pas valide, veuillez le r\u00e9initialiser."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'user/{token}'
    metadata:
      title: 'Change user information'
      description: 'This endpoint lets you updating some information such as password and many else.'
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: adipisci
        type: string
    queryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: 'only required if you need to change it.'
        required: false
        example: adipisci
        type: string
      lastname:
        name: lastname
        description: 'only required if you need to change it.'
        required: false
        example: ducimus
        type: string
      date_naissance:
        name: date_naissance
        description: 'only required if you need to change it, YYYY-MM-DD.'
        required: false
        example: aut
        type: date
      password:
        name: password
        description: 'only required if you need to change the password of the user. And must be 6 characters in min.'
        required: false
        example: eos
        type: string
      email:
        name: email
        description: 'only required if you need to change the email of the user. exemple@mail.com'
        required: false
        example: aut
        type: string
      sexe:
        name: sexe
        description: 'male or female only.'
        required: false
        example: laboriosam
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'user/{token}'
    metadata:
      title: 'Log out'
      description: 'This endpoint lets you logging out a user.'
      authenticated: true
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: illo
        type: string
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
